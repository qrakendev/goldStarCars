<body class="green">
    <form id="regForm" action="addimport" method="POST" autocomplete="off">

    <h1 class="form-heading" style="text-align:center;margin-top:40px;">Request Import:</h1>

    <!-- One "tab" for each step in the form: -->
    <div class="tab">
    <p><input placeholder="Make..."  name="make" oninput="this.className = ''" class="input-field"></p>
    <p><input placeholder="Model..." name="model" oninput="this.className = ''" class="input-field"></p>
    <p><input type="number" placeholder="Mileage..." name="mileage" oninput="this.className = ''" class="input-field"></p>
    </div>

    <div class="tab">
    <p><input placeholder="Name..."  name="name" oninput="this.className = ''" class="input-field"></p>
    <p><input placeholder="Email..." name="email" oninput="this.className = ''" class="input-field"></p>
    <p><input placeholder="Mobile Number..." name="mobile" oninput="this.className = ''" class="input-field"></p>
    <p><input type="submit" value="Submit" onclick="return validateForm()" class="input-field submit-btn" class="input-field"></p>
    </div>

    <div style="overflow:auto;">
    <div style="float:right;">
        <button class="button" type="button" id="prevBtn" onclick="nextPrev(-1)">Previous</button>
        <button class="button" type="button" id="nextBtn" onclick="nextPrev(1)">Next</button>
    </div>
    </div>

    <!-- Circles which indicates the steps of the form: -->
    <div style="text-align:center;margin-top:40px;">
    <span class="step"></span>
    <span class="step"></span>
    </div>

    </form>
</body>


<style>
    .green{
        background: url('/images/partex.jpg');
        background-size: cover;
    }
    .input-field{
        width: 100%;
        font-family: inherit;
        font-size: inherit;
        outline: none;
        border: none;
        border-radius: 2px;
        padding: 18px;
        background: #F2F2F2;
    }

    .button {
        background: linear-gradient(90deg, rgba(218,165,32,1) 0%, rgba(237,191,70,1) 35%, rgba(218,165,32,1) 100%);
        border: none;
        color: white;
        padding: 15px 32px;
        text-align: center;
        text-decoration: none;
        display: inline-block;
        font-size: 16px;
        margin: 4px 2px;
        cursor: pointer;
        border-radius: 40px;
        }

    .submit-btn{
        padding: 1rem 2.4rem;
        font-weight: 700;
        text-align: center;
        color: #F6F7A9;
        background: linear-gradient(90deg, rgba(218,165,32,1) 0%, rgba(237,191,70,1) 35%, rgba(218,165,32,1) 100%); 
        border-radius: 40px;
        cursor: pointer;
        transition: all 0.2s;
    }

    .form-heading{
        font-family: inherit;
        font-size: 4rem;
        font-weight: 700 !important;
        line-height: 4rem;
        color: #daa520;
        margin-bottom: 3%;
    }
    .text-type{
        color: #daa520;
    }
    .box{
        padding: 1%;
    }
    /* Style the form */
    #regForm {
        background-color: #212529;
        margin: 100px auto;
        padding: 40px;
        width: 70%;
        min-width: 300px;
        border-radius: 40px;
    }

    /* Style the input fields */
    input {
        padding: 10px;
        width: 100%;
        font-size: 17px;
        font-family: Raleway;
        border: 1px solid #aaaaaa;
    }

    /* Mark input boxes that gets an error on validation: */
    input.invalid {
        
    }

    /* Hide all steps by default: */
    .tab {
        display: none;
    }

    /* Make circles that indicate the steps of the form: */
    .step {
        height: 15px;
        width: 15px;
        margin: 0 2px;
        background-color: #bbbbbb;
        border: none;
        border-radius: 50%;
        display: inline-block;
        opacity: 0.5;
    }

    /* Mark the active step: */
    .step.active {
    opacity: 1;
    }

    /* Mark the steps that are finished and valid: */
    .step.finish {
    background-color:#daa520;
    }
    /* The container */
    .container {
    display: block;
    position: relative;
    padding-left: 35px;
    margin-bottom: 12px;
    cursor: pointer;
    font-size: 22px;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
    }

    /* Hide the browser's default radio button */
    .container input {
    position: absolute;
    opacity: 0;
    cursor: pointer;
    }

    /* Create a custom radio button */
    .checkmark {
    position: absolute;
    top: 0;
    left: 0;
    height: 25px;
    width: 25px;
    background-color: #eee;
    border-radius: 50%;
    }

    /* On mouse-over, add a grey background color */
    .container:hover input ~ .checkmark {
    background-color: #ccc;
    }

    /* When the radio button is checked, add a blue background */
    .container input:checked ~ .checkmark {
    background-color: #daa520;
    }

    /* Create the indicator (the dot/circle - hidden when not checked) */
    .checkmark:after {
    content: "";
    position: absolute;
    display: none;
    }

    /* Show the indicator (dot/circle) when checked */
    .container input:checked ~ .checkmark:after {
    display: block;
    }

    /* Style the indicator (dot/circle) */
    .container .checkmark:after {
        top: 9px;
        left: 9px;
        width: 8px;
        height: 8px;
        border-radius: 50%;
        background: white;
    }
</style>

<script>
    var currentTab = 0; // Current tab is set to be the first tab (0)
    showTab(currentTab); // Display the current tab

    function showTab(n) {
    // This function will display the specified tab of the form ...
    var x = document.getElementsByClassName("tab");
    x[n].style.display = "block";
    // ... and fix the Previous/Next buttons:
    if (n == 0) {
        document.getElementById("prevBtn").style.display = "none";
    } else {
        document.getElementById("prevBtn").style.display = "inline";
    }
    if (n == (x.length - 1)) {
        document.getElementById("nextBtn").style.display = "none";
    } else {
        document.getElementById("nextBtn").innerHTML = "Next";
    }
    // ... and run a function that displays the correct step indicator:
    fixStepIndicator(n)
    }

    function nextPrev(n) {
    // This function will figure out which tab to display
    var x = document.getElementsByClassName("tab");
    // Exit the function if any field in the current tab is invalid:
    if (n == 1 && !validateForm()) return false;
    // Hide the current tab:
    x[currentTab].style.display = "none";
    // Increase or decrease the current tab by 1:
    currentTab = currentTab + n;
    // if you have reached the end of the form... :
    if (currentTab >= x.length) {
        //...the form gets submitted:
        document.getElementById("regForm").submit();
        return false;
    }
    // Otherwise, display the correct tab:
    showTab(currentTab);
    }

    function validateForm() {
        // This function deals with validation of the form fields
        var x, y, i, valid = true;
        x = document.getElementsByClassName("tab");
        y = x[currentTab].getElementsByTagName("input");
        
        // A loop that checks every input field in the current tab:
        for (i = 0; i < y.length; i++) {
            // If a field is empty or a radio button group is not checked...
            if (y[i].type === "radio" && !isRadioGroupChecked(y[i].name)) {
                // Mark the radio button group as invalid:
                document.getElementsByName(y[i].name)[0].parentNode.parentNode.className += " invalid";
                // Set the current valid status to false:
                valid = false;
            } else if (y[i].value == "") {
                // If a text field is empty, add an "invalid" class to the field:
                y[i].className += " invalid";
                // Set the current valid status to false:
                valid = false;
            }
        }

        // If the valid status is true, mark the step as finished and valid:
        if (valid) {
            document.getElementsByClassName("step")[currentTab].className += " finish";
        }

        return valid; // Return the valid status
    }

    // Function to check if a radio button in a group is checked
    function isRadioGroupChecked(groupName) {
        var radios = document.getElementsByName(groupName);
        for (var i = 0; i < radios.length; i++) {
            if (radios[i].checked) {
                return true;
            }
        }
        return false;
    }
    function fixStepIndicator(n) {
    // This function removes the "active" class of all steps...
    var i, x = document.getElementsByClassName("step");
    for (i = 0; i < x.length; i++) {
        x[i].className = x[i].className.replace(" active", "");
    }
    //... and adds the "active" class to the current step:
    x[n].className += " active";
    }
</script>